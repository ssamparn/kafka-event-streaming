/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.spring.event.streaming.avro.generated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class HadoopRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6984887342542366463L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HadoopRecord\",\"namespace\":\"com.spring.event.streaming.avro.generated\",\"fields\":[{\"name\":\"InvoiceNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"CreatedTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"StoreID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"PosID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"CustomerType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"PaymentMethod\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"DeliveryType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"City\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"State\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"PinCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ItemCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ItemDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ItemPrice\",\"type\":[\"null\",\"double\"]},{\"name\":\"ItemQty\",\"type\":[\"null\",\"int\"]},{\"name\":\"TotalValue\",\"type\":[\"null\",\"double\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<HadoopRecord> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HadoopRecord> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<HadoopRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<HadoopRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<HadoopRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this HadoopRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a HadoopRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a HadoopRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static HadoopRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String InvoiceNumber;
  private java.time.Instant CreatedTime;
  private java.lang.String StoreID;
  private java.lang.String PosID;
  private java.lang.String CustomerType;
  private java.lang.String PaymentMethod;
  private java.lang.String DeliveryType;
  private java.lang.String City;
  private java.lang.String State;
  private java.lang.String PinCode;
  private java.lang.String ItemCode;
  private java.lang.String ItemDescription;
  private java.lang.Double ItemPrice;
  private java.lang.Integer ItemQty;
  private java.lang.Double TotalValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HadoopRecord() {}

  /**
   * All-args constructor.
   * @param InvoiceNumber The new value for InvoiceNumber
   * @param CreatedTime The new value for CreatedTime
   * @param StoreID The new value for StoreID
   * @param PosID The new value for PosID
   * @param CustomerType The new value for CustomerType
   * @param PaymentMethod The new value for PaymentMethod
   * @param DeliveryType The new value for DeliveryType
   * @param City The new value for City
   * @param State The new value for State
   * @param PinCode The new value for PinCode
   * @param ItemCode The new value for ItemCode
   * @param ItemDescription The new value for ItemDescription
   * @param ItemPrice The new value for ItemPrice
   * @param ItemQty The new value for ItemQty
   * @param TotalValue The new value for TotalValue
   */
  public HadoopRecord(java.lang.String InvoiceNumber, java.time.Instant CreatedTime, java.lang.String StoreID, java.lang.String PosID, java.lang.String CustomerType, java.lang.String PaymentMethod, java.lang.String DeliveryType, java.lang.String City, java.lang.String State, java.lang.String PinCode, java.lang.String ItemCode, java.lang.String ItemDescription, java.lang.Double ItemPrice, java.lang.Integer ItemQty, java.lang.Double TotalValue) {
    this.InvoiceNumber = InvoiceNumber;
    this.CreatedTime = CreatedTime.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.StoreID = StoreID;
    this.PosID = PosID;
    this.CustomerType = CustomerType;
    this.PaymentMethod = PaymentMethod;
    this.DeliveryType = DeliveryType;
    this.City = City;
    this.State = State;
    this.PinCode = PinCode;
    this.ItemCode = ItemCode;
    this.ItemDescription = ItemDescription;
    this.ItemPrice = ItemPrice;
    this.ItemQty = ItemQty;
    this.TotalValue = TotalValue;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return InvoiceNumber;
    case 1: return CreatedTime;
    case 2: return StoreID;
    case 3: return PosID;
    case 4: return CustomerType;
    case 5: return PaymentMethod;
    case 6: return DeliveryType;
    case 7: return City;
    case 8: return State;
    case 9: return PinCode;
    case 10: return ItemCode;
    case 11: return ItemDescription;
    case 12: return ItemPrice;
    case 13: return ItemQty;
    case 14: return TotalValue;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: InvoiceNumber = value$ != null ? value$.toString() : null; break;
    case 1: CreatedTime = (java.time.Instant)value$; break;
    case 2: StoreID = value$ != null ? value$.toString() : null; break;
    case 3: PosID = value$ != null ? value$.toString() : null; break;
    case 4: CustomerType = value$ != null ? value$.toString() : null; break;
    case 5: PaymentMethod = value$ != null ? value$.toString() : null; break;
    case 6: DeliveryType = value$ != null ? value$.toString() : null; break;
    case 7: City = value$ != null ? value$.toString() : null; break;
    case 8: State = value$ != null ? value$.toString() : null; break;
    case 9: PinCode = value$ != null ? value$.toString() : null; break;
    case 10: ItemCode = value$ != null ? value$.toString() : null; break;
    case 11: ItemDescription = value$ != null ? value$.toString() : null; break;
    case 12: ItemPrice = (java.lang.Double)value$; break;
    case 13: ItemQty = (java.lang.Integer)value$; break;
    case 14: TotalValue = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'InvoiceNumber' field.
   * @return The value of the 'InvoiceNumber' field.
   */
  public java.lang.String getInvoiceNumber() {
    return InvoiceNumber;
  }


  /**
   * Sets the value of the 'InvoiceNumber' field.
   * @param value the value to set.
   */
  public void setInvoiceNumber(java.lang.String value) {
    this.InvoiceNumber = value;
  }

  /**
   * Gets the value of the 'CreatedTime' field.
   * @return The value of the 'CreatedTime' field.
   */
  public java.time.Instant getCreatedTime() {
    return CreatedTime;
  }


  /**
   * Sets the value of the 'CreatedTime' field.
   * @param value the value to set.
   */
  public void setCreatedTime(java.time.Instant value) {
    this.CreatedTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'StoreID' field.
   * @return The value of the 'StoreID' field.
   */
  public java.lang.String getStoreID() {
    return StoreID;
  }


  /**
   * Sets the value of the 'StoreID' field.
   * @param value the value to set.
   */
  public void setStoreID(java.lang.String value) {
    this.StoreID = value;
  }

  /**
   * Gets the value of the 'PosID' field.
   * @return The value of the 'PosID' field.
   */
  public java.lang.String getPosID() {
    return PosID;
  }


  /**
   * Sets the value of the 'PosID' field.
   * @param value the value to set.
   */
  public void setPosID(java.lang.String value) {
    this.PosID = value;
  }

  /**
   * Gets the value of the 'CustomerType' field.
   * @return The value of the 'CustomerType' field.
   */
  public java.lang.String getCustomerType() {
    return CustomerType;
  }


  /**
   * Sets the value of the 'CustomerType' field.
   * @param value the value to set.
   */
  public void setCustomerType(java.lang.String value) {
    this.CustomerType = value;
  }

  /**
   * Gets the value of the 'PaymentMethod' field.
   * @return The value of the 'PaymentMethod' field.
   */
  public java.lang.String getPaymentMethod() {
    return PaymentMethod;
  }


  /**
   * Sets the value of the 'PaymentMethod' field.
   * @param value the value to set.
   */
  public void setPaymentMethod(java.lang.String value) {
    this.PaymentMethod = value;
  }

  /**
   * Gets the value of the 'DeliveryType' field.
   * @return The value of the 'DeliveryType' field.
   */
  public java.lang.String getDeliveryType() {
    return DeliveryType;
  }


  /**
   * Sets the value of the 'DeliveryType' field.
   * @param value the value to set.
   */
  public void setDeliveryType(java.lang.String value) {
    this.DeliveryType = value;
  }

  /**
   * Gets the value of the 'City' field.
   * @return The value of the 'City' field.
   */
  public java.lang.String getCity() {
    return City;
  }


  /**
   * Sets the value of the 'City' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.City = value;
  }

  /**
   * Gets the value of the 'State' field.
   * @return The value of the 'State' field.
   */
  public java.lang.String getState() {
    return State;
  }


  /**
   * Sets the value of the 'State' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.State = value;
  }

  /**
   * Gets the value of the 'PinCode' field.
   * @return The value of the 'PinCode' field.
   */
  public java.lang.String getPinCode() {
    return PinCode;
  }


  /**
   * Sets the value of the 'PinCode' field.
   * @param value the value to set.
   */
  public void setPinCode(java.lang.String value) {
    this.PinCode = value;
  }

  /**
   * Gets the value of the 'ItemCode' field.
   * @return The value of the 'ItemCode' field.
   */
  public java.lang.String getItemCode() {
    return ItemCode;
  }


  /**
   * Sets the value of the 'ItemCode' field.
   * @param value the value to set.
   */
  public void setItemCode(java.lang.String value) {
    this.ItemCode = value;
  }

  /**
   * Gets the value of the 'ItemDescription' field.
   * @return The value of the 'ItemDescription' field.
   */
  public java.lang.String getItemDescription() {
    return ItemDescription;
  }


  /**
   * Sets the value of the 'ItemDescription' field.
   * @param value the value to set.
   */
  public void setItemDescription(java.lang.String value) {
    this.ItemDescription = value;
  }

  /**
   * Gets the value of the 'ItemPrice' field.
   * @return The value of the 'ItemPrice' field.
   */
  public java.lang.Double getItemPrice() {
    return ItemPrice;
  }


  /**
   * Sets the value of the 'ItemPrice' field.
   * @param value the value to set.
   */
  public void setItemPrice(java.lang.Double value) {
    this.ItemPrice = value;
  }

  /**
   * Gets the value of the 'ItemQty' field.
   * @return The value of the 'ItemQty' field.
   */
  public java.lang.Integer getItemQty() {
    return ItemQty;
  }


  /**
   * Sets the value of the 'ItemQty' field.
   * @param value the value to set.
   */
  public void setItemQty(java.lang.Integer value) {
    this.ItemQty = value;
  }

  /**
   * Gets the value of the 'TotalValue' field.
   * @return The value of the 'TotalValue' field.
   */
  public java.lang.Double getTotalValue() {
    return TotalValue;
  }


  /**
   * Sets the value of the 'TotalValue' field.
   * @param value the value to set.
   */
  public void setTotalValue(java.lang.Double value) {
    this.TotalValue = value;
  }

  /**
   * Creates a new HadoopRecord RecordBuilder.
   * @return A new HadoopRecord RecordBuilder
   */
  public static com.spring.event.streaming.avro.generated.HadoopRecord.Builder newBuilder() {
    return new com.spring.event.streaming.avro.generated.HadoopRecord.Builder();
  }

  /**
   * Creates a new HadoopRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HadoopRecord RecordBuilder
   */
  public static com.spring.event.streaming.avro.generated.HadoopRecord.Builder newBuilder(com.spring.event.streaming.avro.generated.HadoopRecord.Builder other) {
    if (other == null) {
      return new com.spring.event.streaming.avro.generated.HadoopRecord.Builder();
    } else {
      return new com.spring.event.streaming.avro.generated.HadoopRecord.Builder(other);
    }
  }

  /**
   * Creates a new HadoopRecord RecordBuilder by copying an existing HadoopRecord instance.
   * @param other The existing instance to copy.
   * @return A new HadoopRecord RecordBuilder
   */
  public static com.spring.event.streaming.avro.generated.HadoopRecord.Builder newBuilder(com.spring.event.streaming.avro.generated.HadoopRecord other) {
    if (other == null) {
      return new com.spring.event.streaming.avro.generated.HadoopRecord.Builder();
    } else {
      return new com.spring.event.streaming.avro.generated.HadoopRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for HadoopRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HadoopRecord>
    implements org.apache.avro.data.RecordBuilder<HadoopRecord> {

    private java.lang.String InvoiceNumber;
    private java.time.Instant CreatedTime;
    private java.lang.String StoreID;
    private java.lang.String PosID;
    private java.lang.String CustomerType;
    private java.lang.String PaymentMethod;
    private java.lang.String DeliveryType;
    private java.lang.String City;
    private java.lang.String State;
    private java.lang.String PinCode;
    private java.lang.String ItemCode;
    private java.lang.String ItemDescription;
    private java.lang.Double ItemPrice;
    private java.lang.Integer ItemQty;
    private java.lang.Double TotalValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.spring.event.streaming.avro.generated.HadoopRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[1].schema(), other.CreatedTime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.StoreID)) {
        this.StoreID = data().deepCopy(fields()[2].schema(), other.StoreID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.PosID)) {
        this.PosID = data().deepCopy(fields()[3].schema(), other.PosID);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[4].schema(), other.CustomerType);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.PaymentMethod)) {
        this.PaymentMethod = data().deepCopy(fields()[5].schema(), other.PaymentMethod);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[6].schema(), other.DeliveryType);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.City)) {
        this.City = data().deepCopy(fields()[7].schema(), other.City);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.State)) {
        this.State = data().deepCopy(fields()[8].schema(), other.State);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.PinCode)) {
        this.PinCode = data().deepCopy(fields()[9].schema(), other.PinCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.ItemCode)) {
        this.ItemCode = data().deepCopy(fields()[10].schema(), other.ItemCode);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.ItemDescription)) {
        this.ItemDescription = data().deepCopy(fields()[11].schema(), other.ItemDescription);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.ItemPrice)) {
        this.ItemPrice = data().deepCopy(fields()[12].schema(), other.ItemPrice);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.ItemQty)) {
        this.ItemQty = data().deepCopy(fields()[13].schema(), other.ItemQty);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.TotalValue)) {
        this.TotalValue = data().deepCopy(fields()[14].schema(), other.TotalValue);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing HadoopRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.spring.event.streaming.avro.generated.HadoopRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[1].schema(), other.CreatedTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.StoreID)) {
        this.StoreID = data().deepCopy(fields()[2].schema(), other.StoreID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PosID)) {
        this.PosID = data().deepCopy(fields()[3].schema(), other.PosID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[4].schema(), other.CustomerType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PaymentMethod)) {
        this.PaymentMethod = data().deepCopy(fields()[5].schema(), other.PaymentMethod);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[6].schema(), other.DeliveryType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.City)) {
        this.City = data().deepCopy(fields()[7].schema(), other.City);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.State)) {
        this.State = data().deepCopy(fields()[8].schema(), other.State);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PinCode)) {
        this.PinCode = data().deepCopy(fields()[9].schema(), other.PinCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ItemCode)) {
        this.ItemCode = data().deepCopy(fields()[10].schema(), other.ItemCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ItemDescription)) {
        this.ItemDescription = data().deepCopy(fields()[11].schema(), other.ItemDescription);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.ItemPrice)) {
        this.ItemPrice = data().deepCopy(fields()[12].schema(), other.ItemPrice);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.ItemQty)) {
        this.ItemQty = data().deepCopy(fields()[13].schema(), other.ItemQty);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.TotalValue)) {
        this.TotalValue = data().deepCopy(fields()[14].schema(), other.TotalValue);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'InvoiceNumber' field.
      * @return The value.
      */
    public java.lang.String getInvoiceNumber() {
      return InvoiceNumber;
    }


    /**
      * Sets the value of the 'InvoiceNumber' field.
      * @param value The value of 'InvoiceNumber'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setInvoiceNumber(java.lang.String value) {
      validate(fields()[0], value);
      this.InvoiceNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceNumber' field has been set.
      * @return True if the 'InvoiceNumber' field has been set, false otherwise.
      */
    public boolean hasInvoiceNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'InvoiceNumber' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearInvoiceNumber() {
      InvoiceNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreatedTime' field.
      * @return The value.
      */
    public java.time.Instant getCreatedTime() {
      return CreatedTime;
    }


    /**
      * Sets the value of the 'CreatedTime' field.
      * @param value The value of 'CreatedTime'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setCreatedTime(java.time.Instant value) {
      validate(fields()[1], value);
      this.CreatedTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CreatedTime' field has been set.
      * @return True if the 'CreatedTime' field has been set, false otherwise.
      */
    public boolean hasCreatedTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CreatedTime' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearCreatedTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'StoreID' field.
      * @return The value.
      */
    public java.lang.String getStoreID() {
      return StoreID;
    }


    /**
      * Sets the value of the 'StoreID' field.
      * @param value The value of 'StoreID'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setStoreID(java.lang.String value) {
      validate(fields()[2], value);
      this.StoreID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'StoreID' field has been set.
      * @return True if the 'StoreID' field has been set, false otherwise.
      */
    public boolean hasStoreID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'StoreID' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearStoreID() {
      StoreID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'PosID' field.
      * @return The value.
      */
    public java.lang.String getPosID() {
      return PosID;
    }


    /**
      * Sets the value of the 'PosID' field.
      * @param value The value of 'PosID'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setPosID(java.lang.String value) {
      validate(fields()[3], value);
      this.PosID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'PosID' field has been set.
      * @return True if the 'PosID' field has been set, false otherwise.
      */
    public boolean hasPosID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'PosID' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearPosID() {
      PosID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomerType' field.
      * @return The value.
      */
    public java.lang.String getCustomerType() {
      return CustomerType;
    }


    /**
      * Sets the value of the 'CustomerType' field.
      * @param value The value of 'CustomerType'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setCustomerType(java.lang.String value) {
      validate(fields()[4], value);
      this.CustomerType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomerType' field has been set.
      * @return True if the 'CustomerType' field has been set, false otherwise.
      */
    public boolean hasCustomerType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CustomerType' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearCustomerType() {
      CustomerType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentMethod' field.
      * @return The value.
      */
    public java.lang.String getPaymentMethod() {
      return PaymentMethod;
    }


    /**
      * Sets the value of the 'PaymentMethod' field.
      * @param value The value of 'PaymentMethod'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setPaymentMethod(java.lang.String value) {
      validate(fields()[5], value);
      this.PaymentMethod = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentMethod' field has been set.
      * @return True if the 'PaymentMethod' field has been set, false otherwise.
      */
    public boolean hasPaymentMethod() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'PaymentMethod' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearPaymentMethod() {
      PaymentMethod = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryType' field.
      * @return The value.
      */
    public java.lang.String getDeliveryType() {
      return DeliveryType;
    }


    /**
      * Sets the value of the 'DeliveryType' field.
      * @param value The value of 'DeliveryType'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setDeliveryType(java.lang.String value) {
      validate(fields()[6], value);
      this.DeliveryType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryType' field has been set.
      * @return True if the 'DeliveryType' field has been set, false otherwise.
      */
    public boolean hasDeliveryType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'DeliveryType' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearDeliveryType() {
      DeliveryType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'City' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return City;
    }


    /**
      * Sets the value of the 'City' field.
      * @param value The value of 'City'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setCity(java.lang.String value) {
      validate(fields()[7], value);
      this.City = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'City' field has been set.
      * @return True if the 'City' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'City' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearCity() {
      City = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'State' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return State;
    }


    /**
      * Sets the value of the 'State' field.
      * @param value The value of 'State'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setState(java.lang.String value) {
      validate(fields()[8], value);
      this.State = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'State' field has been set.
      * @return True if the 'State' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'State' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearState() {
      State = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'PinCode' field.
      * @return The value.
      */
    public java.lang.String getPinCode() {
      return PinCode;
    }


    /**
      * Sets the value of the 'PinCode' field.
      * @param value The value of 'PinCode'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setPinCode(java.lang.String value) {
      validate(fields()[9], value);
      this.PinCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'PinCode' field has been set.
      * @return True if the 'PinCode' field has been set, false otherwise.
      */
    public boolean hasPinCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'PinCode' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearPinCode() {
      PinCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ItemCode' field.
      * @return The value.
      */
    public java.lang.String getItemCode() {
      return ItemCode;
    }


    /**
      * Sets the value of the 'ItemCode' field.
      * @param value The value of 'ItemCode'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setItemCode(java.lang.String value) {
      validate(fields()[10], value);
      this.ItemCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ItemCode' field has been set.
      * @return True if the 'ItemCode' field has been set, false otherwise.
      */
    public boolean hasItemCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ItemCode' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearItemCode() {
      ItemCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ItemDescription' field.
      * @return The value.
      */
    public java.lang.String getItemDescription() {
      return ItemDescription;
    }


    /**
      * Sets the value of the 'ItemDescription' field.
      * @param value The value of 'ItemDescription'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setItemDescription(java.lang.String value) {
      validate(fields()[11], value);
      this.ItemDescription = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ItemDescription' field has been set.
      * @return True if the 'ItemDescription' field has been set, false otherwise.
      */
    public boolean hasItemDescription() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ItemDescription' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearItemDescription() {
      ItemDescription = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'ItemPrice' field.
      * @return The value.
      */
    public java.lang.Double getItemPrice() {
      return ItemPrice;
    }


    /**
      * Sets the value of the 'ItemPrice' field.
      * @param value The value of 'ItemPrice'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setItemPrice(java.lang.Double value) {
      validate(fields()[12], value);
      this.ItemPrice = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'ItemPrice' field has been set.
      * @return True if the 'ItemPrice' field has been set, false otherwise.
      */
    public boolean hasItemPrice() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'ItemPrice' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearItemPrice() {
      ItemPrice = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'ItemQty' field.
      * @return The value.
      */
    public java.lang.Integer getItemQty() {
      return ItemQty;
    }


    /**
      * Sets the value of the 'ItemQty' field.
      * @param value The value of 'ItemQty'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setItemQty(java.lang.Integer value) {
      validate(fields()[13], value);
      this.ItemQty = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'ItemQty' field has been set.
      * @return True if the 'ItemQty' field has been set, false otherwise.
      */
    public boolean hasItemQty() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'ItemQty' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearItemQty() {
      ItemQty = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalValue' field.
      * @return The value.
      */
    public java.lang.Double getTotalValue() {
      return TotalValue;
    }


    /**
      * Sets the value of the 'TotalValue' field.
      * @param value The value of 'TotalValue'.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder setTotalValue(java.lang.Double value) {
      validate(fields()[14], value);
      this.TotalValue = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalValue' field has been set.
      * @return True if the 'TotalValue' field has been set, false otherwise.
      */
    public boolean hasTotalValue() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'TotalValue' field.
      * @return This builder.
      */
    public com.spring.event.streaming.avro.generated.HadoopRecord.Builder clearTotalValue() {
      TotalValue = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public HadoopRecord build() {
      try {
        HadoopRecord record = new HadoopRecord();
        record.InvoiceNumber = fieldSetFlags()[0] ? this.InvoiceNumber : (java.lang.String) defaultValue(fields()[0]);
        record.CreatedTime = fieldSetFlags()[1] ? this.CreatedTime : (java.time.Instant) defaultValue(fields()[1]);
        record.StoreID = fieldSetFlags()[2] ? this.StoreID : (java.lang.String) defaultValue(fields()[2]);
        record.PosID = fieldSetFlags()[3] ? this.PosID : (java.lang.String) defaultValue(fields()[3]);
        record.CustomerType = fieldSetFlags()[4] ? this.CustomerType : (java.lang.String) defaultValue(fields()[4]);
        record.PaymentMethod = fieldSetFlags()[5] ? this.PaymentMethod : (java.lang.String) defaultValue(fields()[5]);
        record.DeliveryType = fieldSetFlags()[6] ? this.DeliveryType : (java.lang.String) defaultValue(fields()[6]);
        record.City = fieldSetFlags()[7] ? this.City : (java.lang.String) defaultValue(fields()[7]);
        record.State = fieldSetFlags()[8] ? this.State : (java.lang.String) defaultValue(fields()[8]);
        record.PinCode = fieldSetFlags()[9] ? this.PinCode : (java.lang.String) defaultValue(fields()[9]);
        record.ItemCode = fieldSetFlags()[10] ? this.ItemCode : (java.lang.String) defaultValue(fields()[10]);
        record.ItemDescription = fieldSetFlags()[11] ? this.ItemDescription : (java.lang.String) defaultValue(fields()[11]);
        record.ItemPrice = fieldSetFlags()[12] ? this.ItemPrice : (java.lang.Double) defaultValue(fields()[12]);
        record.ItemQty = fieldSetFlags()[13] ? this.ItemQty : (java.lang.Integer) defaultValue(fields()[13]);
        record.TotalValue = fieldSetFlags()[14] ? this.TotalValue : (java.lang.Double) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HadoopRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<HadoopRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HadoopRecord>
    READER$ = (org.apache.avro.io.DatumReader<HadoopRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










